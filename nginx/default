# Vaping Tour 英文版本 - 9101
upstream api.en.vapingtour.com {
	ip_hash;
    server 47.89.240.236:9000;
    server 47.88.1.155:9000;
}

limit_req_zone $binary_remote_addr zone=alli_api_en_vapingtour_com:10m rate=25r/s;

server {
    listen 9101;
    server_name api.en.vapingtour.com;

#   location ^~ /vapor/puff/add {
#       return 404;
#   }

    location / {
        proxy_pass http://api.en.vapingtour.com;
        proxy_redirect off;
        limit_req zone=alli_api_en_vapingtour_com burst=5 nodelay;
    }
}

server {
    listen 80;
    listen [::]:80;
    server_name api.vapingtour.com;
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;	
        proxy_pass http://localhost:9101;
    }

#    if ($scheme != "https") {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/api.vapingtour.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/api.vapingtour.com/privkey.pem; # managed by Certbot
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    server_name api.vapingtour.com;
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr:$remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for:$remote_port;
        proxy_redirect off;
        proxy_pass http://localhost:9101;
    }
}

# 电商系统 - B2B
server {
    listen 80;
    listen [::]:80;
    server_name order.smoktech.com;
    return 301 https://$host$request_uri;

    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/order.smoktech.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/order.smoktech.com/privkey.pem; # managed by Certbot
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    server_name order.smoktech.com;

    location ^~ /api/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_pass http://localhost:9009;
    }

    location ^~ /static/order/ {
        root /mnt/go_server/titan;
    }

    location ^~ /static/web_star/ {
	    root /mnt/go_server/titan;
    }


    location ^~ / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr:$remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for:$remote_port;
        proxy_redirect off;

        expires -1; add_header Pragma "no-cache";
        add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
        try_files $uri $uri/ /index.html =404;

        root /mnt/go_server/order_b2b;
    }
}

# 电商系统 - 管理后台
server {
    listen 80;
    listen [::]:80;
    server_name adminorder.smoktech.com;
    return 301 https://$host$request_uri;

    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot


    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/adminorder.smoktech.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/adminorder.smoktech.com/privkey.pem; # managed by Certbot
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    server_name adminorder.smoktech.com;

    location ^~ /api/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_pass http://localhost:9009;
    }

    location ^~ / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr:$remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for:$remote_port;
        proxy_redirect off;

        expires -1; add_header Pragma "no-cache";
        add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
        try_files $uri $uri/ /index.html =404;

        root /mnt/go_server/order_admin;
    }
}

# 电商系统 - B2C
server {
    listen 80;
    listen [::]:80;
    server_name store.smoktech.com;
    return 301 https://$host$request_uri;

    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/store.smoktech.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/store.smoktech.com/privkey.pem; # managed by Certbot
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    server_name store.smoktech.com;

	location ^~ /checkout {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_pass http://localhost:9009;
    }

	location ^~ /paypal {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_pass http://localhost:9009;
    }

	location ^~ /api/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_pass http://localhost:9009;
    }

    location ^~ / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr:$remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for:$remote_port;
        proxy_redirect off;

        expires -1; add_header Pragma "no-cache";
        add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
        try_files $uri $uri/ /index.html =404;

        root /mnt/go_server/order_b2c;
    }

}

# 官网
server {
    listen 80;
    listen [::]:80;
    server_name smoktech.com;
    return 301 http://www.smoktech.com$request_uri;

    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name smoktech.com;
    return 301 https://www.smoktech.com$request_uri;
    ssl_certificate /etc/letsencrypt/live/smoktech.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/smoktech.com/privkey.pem; # managed by Certbot
}

server {
    listen 80;
    listen [::]:80;
    server_name www.smoktech.com;
    return 301 https://$host$request_uri;

    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/www.smoktech.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.smoktech.com/privkey.pem; # managed by Certbot
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    server_name www.smoktech.com;

    location ^~ /api/ {
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
	 	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_redirect off;
		proxy_pass http://localhost:9009;
	}

    location ^~ /js/ {
        root /mnt/go_server/titan/template/html/default;
    }

	location ^~ /css/ {
        root /mnt/go_server/titan/template/html/default;
	}

	location ^~ /index.aspx {
        return 301 https://$host;
	}

	location ^~ /images/product {
	    return 404;
	}

	location ^~ /index.html {
		return 301 https://$host;
	}

    location = /after-sales {
		return 301 /after-sales/channel;
	}

    location ^~ / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_pass http://localhost:9009;
    }


}

# Vaping Tour Intro Page
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/vapingtour.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/vapingtour.com/privkey.pem; # managed by Certbot
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    root /mnt/go_server/vaping_tour_app_intro;
    index index.html index.htm;

    # Make site accessible from http://localhost/
    server_name vapingtour.com;

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
        # Uncomment to enable naxsi on this location
        # include /etc/nginx/naxsi.rules
    }

}

server {
    listen 80 default_server;
    listen [::]:80;
    server_name vapingtour.com;
    return 301 https://$host$request_uri;

    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot

}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/m.vapingtour.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/m.vapingtour.com/privkey.pem; # managed by Certbot
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    # Make site accessible from http://localhost/
    server_name m.vapingtour.com;

    location / {
        root /mnt/go_server/vaping_tour_app_intro;
        index index.html index.htm;
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
        # Uncomment to enable naxsi on this location
        # include /etc/nginx/naxsi.rules
    }

    location ^~ /s/css/anti-fake.css {
        rewrite ^ /code/css/anti-fake.css;
    }

    location = /s/report.html {
        rewrite ^ /code/report.html;
    }

    location ^~ /s/ {
        rewrite ^ /code/index.html;
    }
}

server {
    listen 80;
    listen [::]:80;
    server_name m.vapingtour.com;
    return 301 https://$host$request_uri;

    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot

    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot

}

# 网红
server {
    listen 80;
    listen [::]:80;
    server_name ws.smoktech.com;
    return 301 https://$host$request_uri;

    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/ws.smoktech.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ws.smoktech.com/privkey.pem; # managed by Certbot
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    server_name ws.smoktech.com;

    location ^~ /api/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_pass http://localhost:9009;
    }
    
    location ^~ / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr:$remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for:$remote_port;
        proxy_redirect off;

        expires -1; add_header Pragma "no-cache";
        add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
        try_files $uri $uri/ /index.html =404;

        root /mnt/go_server/web_star;
    }
}

